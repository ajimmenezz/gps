{"version":3,"sources":["webpack:///./node_modules/moment-timezone/moment-timezone.js","webpack:///./node_modules/moment-timezone/index.js"],"names":["root","factory","module","exports","this","moment","cachedGuess","VERSION","zones","links","names","guesses","version","logError","momentVersion","split","major","minor","charCodeToInt","charCode","unpackBase60","string","num","i","parts","whole","fractional","multiplier","out","sign","charCodeAt","length","arrayToInt","array","intToUntil","Math","round","Infinity","mapIndices","source","indices","unpack","data","offsets","untils","name","abbrs","population","Zone","packedString","_set","OffsetAt","at","timeString","toTimeString","abbr","match","join","undefined","offset","getTimezoneOffset","ZoneScore","zone","offsetScore","abbrScore","findChange","low","high","mid","diff","Date","userOffsets","change","next","startYear","getFullYear","last","push","sortZoneScores","a","b","localeCompare","addToGuesses","guessesForUserOffsets","j","guessesOffset","offsetsLength","filteredGuesses","hasOwnProperty","rebuildGuess","intlName","Intl","DateTimeFormat","resolvedOptions","timeZone","normalizeName","e","zoneScore","zoneScores","getZone","scoreOffsetAt","sort","guess","ignoreCache","toLowerCase","replace","addZone","packed","normalized","caller","link","getNames","addLink","aliases","alias","normal0","normal1","loadData","tz","dataVersion","zoneExists","didShowError","needsOffset","m","isUnixTimestamp","_f","_a","_tzm","message","console","error","input","args","Array","prototype","slice","call","arguments","utc","apply","isMoment","add","parse","unpacked","_index","timestamp","target","offsetNext","offsetPrev","max","moveAmbiguousForward","moveInvalidForward","mom","utcOffset","offsetAt","abs","_zones","_links","_names","load","fn","abbrWrap","old","_z","resetZoneWrap","resetZoneWrap2","defaultZone","updateOffset","keepTime","_isUTC","_d","z","Error","zoneName","zoneAbbr","local","setDefault","momentProperties","Object","toString"],"mappings":"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","file":"js/chunk-vendors~74b58bca.86a5009f.js","sourcesContent":["//! moment-timezone.js\n//! version : 0.5.27\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Do not load moment-timezone a second time.\n\t// if (moment.tz !== undefined) {\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t// \treturn moment;\n\t// }\n\n\tvar VERSION = \"0.5.27\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess;\n\n\tif (!moment || typeof moment.version !== 'string') {\n\t\tlogError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n\t}\n\n\tvar momentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < untils.length; i++) {\n\t\t\t\tif (target < untils[i]) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\tlogError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t},\n\n\t\tutcOffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\toffsets = [last],\n\t\t\tchange, next, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\tif (next.offset !== last.offset) {\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t}\n\t\t\tlast = next;\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\tif (a.zone.population !== b.zone.population) {\n\t\t\treturn b.zone.population - a.zone.population;\n\t\t}\n\t\treturn b.zone.name.localeCompare(a.zone.name);\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\ti, j, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\tguessesOffset = guesses[offsets[i].offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tif (intlName && intlName.length > 3) {\n\t\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\t\tif (name) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\tvar isUnixTimestamp = (m._f === 'X' || m._f === 'x');\n\t\treturn !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tzone = getZone(name),\n\t\t\tout  = moment.utc.apply(null, args);\n\n\t\tif (zone && !moment.isMoment(input) && needsOffset(out)) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.utcOffset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tvar z = mom._z;\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t\tmom._z = z;\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name, keepTime) {\n\t\tif (name) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n\t\t\t}\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this, keepTime);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap2 (old) {\n\t\treturn function () {\n\t\t\tif (arguments.length > 0) this._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName  = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr  = abbrWrap(fn.zoneAbbr);\n\tfn.utc       = resetZoneWrap(fn.utc);\n\tfn.local     = resetZoneWrap(fn.local);\n\tfn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n","var moment = module.exports = require(\"./moment-timezone\");\nmoment.tz.load(require('./data/packed/latest.json'));\n"],"sourceRoot":""}